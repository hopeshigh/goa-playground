// Code generated by goa v3.12.4, DO NOT EDIT.
//
// todo HTTP client CLI support package
//
// Command:
// $ goa gen github.com/hopeshigh/goa-playground/design

package client

import (
	"encoding/json"
	"fmt"

	todo "github.com/hopeshigh/goa-playground/gen/todo"
)

// BuildCreatePayload builds the payload for the todo create endpoint from CLI
// flags.
func BuildCreatePayload(todoCreateBody string) (*todo.CreatePayload, error) {
	var err error
	var body CreateRequestBody
	{
		err = json.Unmarshal([]byte(todoCreateBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"description\": \"Quasi facere.\",\n      \"title\": \"Numquam distinctio.\"\n   }'")
		}
	}
	v := &todo.CreatePayload{
		Title:       body.Title,
		Description: body.Description,
	}

	return v, nil
}

// BuildCompletePayload builds the payload for the todo complete endpoint from
// CLI flags.
func BuildCompletePayload(todoCompleteID string) (*todo.CompletePayload, error) {
	var id string
	{
		id = todoCompleteID
	}
	v := &todo.CompletePayload{}
	v.ID = id

	return v, nil
}

// BuildViewPayload builds the payload for the todo view endpoint from CLI
// flags.
func BuildViewPayload(todoViewID string) (*todo.ViewPayload, error) {
	var id string
	{
		id = todoViewID
	}
	v := &todo.ViewPayload{}
	v.ID = id

	return v, nil
}
